apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "redis-exporter.exporterDeploymentName" . }}
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "redis-exporter.labels" . | nindent 4 }}
spec:
  selector:
    matchLabels:
      {{- include "redis-exporter.selectorLabels" . | nindent 6 }}
  replicas: {{ .Values.replicaCount }}
  template:
    metadata:
      annotations:
      {{- include "redis-exporter.sysdigAnnotations" . | nindent 8 }}
      {{- with .Values.podAnnotations }}
          {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "redis-exporter.selectorLabels" . | nindent 8 }}
    spec:
      containers:
      - name: {{ .Chart.Name }}
        {{- if not .Values.ubi }}
        image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
        {{- end }}
        {{- if .Values.ubi }}
        image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}-ubi"
        {{- end }}   
        ports:
          - containerPort: 9121
        env:
        - name: REDIS_ADDR
        {{- if .Values.redisTlsConfig.enabled }}
          value: rediss://{{ .Values.url.name }}:{{ .Values.url.port }}
        {{- else }}
          value: redis://{{ .Values.url.name }}:{{ .Values.url.port }}
        {{- end }}
        {{- if .Values.redisTlsConfig.enabled }}
        {{- if .Values.redisTlsConfig.skipTlsVerification }}
        - name: REDIS_EXPORTER_SKIP_TLS_VERIFICATION
          value: "true"
        {{- end }}
        {{- if and (.Values.redisTlsConfig.caCertFile.secret.name) (.Values.redisTlsConfig.caCertFile.secret.key) }}
        - name: REDIS_EXPORTER_TLS_CA_CERT_FILE 
          value: {{ .Values.redisTlsConfig.mountPath }}/tls-ca-cert.crt
        {{- end }}
        {{- if and (.Values.redisTlsConfig.clientKeyFile.secret.name) (.Values.redisTlsConfig.clientKeyFile.secret.key) }}
        - name: REDIS_EXPORTER_TLS_CLIENT_KEY_FILE
          value: {{ .Values.redisTlsConfig.mountPath }}/tls-client-key.key
        {{- end }}
        {{- if and (.Values.redisTlsConfig.clientCertFile.secret.name) (.Values.redisTlsConfig.clientCertFile.secret.key) }}
        - name: REDIS_EXPORTER_TLS_CLIENT_CERT_FILE
          value: {{ .Values.redisTlsConfig.mountPath }}/tls-client-cert.crt
        {{- end }}
        {{- if and (.Values.redisTlsConfig.serverKeyFile.secret.name) (.Values.redisTlsConfig.serverKeyFile.secret.key) }}
        - name: REDIS_EXPORTER_TLS_SERVER_KEY_FILE
          value: {{ .Values.redisTlsConfig.mountPath }}/tls-server-key.key
        {{- end }}
        {{- if and (.Values.redisTlsConfig.serverCertFile.secret.name) (.Values.redisTlsConfig.serverCertFile.secret.key) }}
        - name: REDIS_EXPORTER_TLS_SERVER_CERT_FILE
          value: {{ .Values.redisTlsConfig.mountPath }}/tls-server-cert.crt
        {{- end }}
        {{- end }}
        {{- if .Values.auth.enabled }}
        - name: REDIS_PASSWORD
        {{- if .Values.auth.secret.name }}
          valueFrom:
            secretKeyRef:
              name: {{ .Values.auth.secret.name }}
              key: {{ .Values.auth.secret.key }}
        {{- else }}
          value: {{ .Values.auth.redisPassword }}
        {{- end }}
        {{- if .Values.auth.redisUser }}
        - name: REDIS_USER
          value: {{ .Values.auth.redisUser }}
        {{- end }}
        {{- end }}
        {{- if .Values.enableDebug }}
        - name: REDIS_EXPORTER_DEBUG
          value: "true"
        {{- end }}
        volumeMounts:
        {{- if .Values.redisTlsConfig.enabled }}
        - mountPath: {{ .Values.redisTlsConfig.mountPath }}
          name: tls
          readOnly: true
        {{- end}}
        resources:
          {{- toYaml .Values.resources | nindent 12 }}
      volumes:
        {{- if .Values.redisTlsConfig.enabled }}
        - name: tls
          projected:
            sources:
            {{- if and (.Values.redisTlsConfig.caCertFile.secret.name) (.Values.redisTlsConfig.caCertFile.secret.key) }}
            - secret:
                name: {{ .Values.redisTlsConfig.caCertFile.secret.name }}
                items:
                  - key: {{ .Values.redisTlsConfig.caCertFile.secret.key }}
                    path: tls-ca-cert.crt
            {{- end }}
            {{- if and (.Values.redisTlsConfig.clientKeyFile.secret.name) (.Values.redisTlsConfig.clientKeyFile.secret.key) }}
            - secret:
                name: {{ .Values.redisTlsConfig.clientKeyFile.secret.name }}
                items:
                  - key: {{ .Values.redisTlsConfig.clientKeyFile.secret.key }}
                    path: tls-client-key.key
            {{- end }}
            {{- if and (.Values.redisTlsConfig.clientCertFile.secret.name) (.Values.redisTlsConfig.clientCertFile.secret.key) }}
            - secret:
                name: {{ .Values.redisTlsConfig.clientCertFile.secret.name }}
                items:
                  - key: {{ .Values.redisTlsConfig.clientCertFile.secret.key }}
                    path: tls-client-cert.crt
            {{- end }}
            {{- if and (.Values.redisTlsConfig.serverKeyFile.secret.name) (.Values.redisTlsConfig.serverKeyFile.secret.key) }}
            - secret:
                name: {{ .Values.redisTlsConfig.serverKeyFile.secret.name }}
                items:
                  - key: {{ .Values.redisTlsConfig.serverKeyFile.secret.key }}
                    path: tls-server-key.key
            {{- end }}
            {{- if and (.Values.redisTlsConfig.serverCertFile.secret.name) (.Values.redisTlsConfig.serverCertFile.secret.key) }}
            - secret:
                name: {{ .Values.redisTlsConfig.serverCertFile.secret.name }}
                items:
                  - key: {{ .Values.redisTlsConfig.serverCertFile.secret.key }}
                    path: tls-server-cert.crt
            {{- end }}
        {{- end }}